from tkinter import *
from tkinter import ttk
from datetime import datetime
import tkinter.messagebox as box

allProducts = [
    {'name': '–Ø–±–ª–æ–∫–æ', 'price': 30},
    {'name': '–ë–∞–Ω–∞–Ω', 'price': 25},
    {'name': '–ú–æ–ª–æ–∫–æ', 'price': 80},
    {'name': '–•–ª–µ–±', 'price': 40},
    {'name': '–°—ã—Ä', 'price': 150},
    {'name': '–°–æ–∫', 'price': 100},
    {'name': '–ú–∞—Å–ª–æ', 'price': 120},    
    {'name': '–ö–æ—Ñ–µ', 'price': 200},
    {'name': '–ß–∞–π', 'price': 160}
]

selectedProducts = []  
checkbox_map = {}     
cart = {}         
payment = 'cart'

def update_scroll_visibility():
    needs_scroll = canvas.bbox("all")[3] > canvas.winfo_height()
    if needs_scroll:
        scrollbar.place(x=332, y=143, height=245)
    else:
        scrollbar.place_forget()

def on_configure(event):
    canvas.configure(scrollregion=canvas.bbox("all"))
    update_scroll_visibility()

def change_qty(name, delta):
    if name in cart:
        cart[name] += delta
        if cart[name] <= 0:
            del cart[name]
    elif delta > 0:
        cart[name] = 1
    cheq.config(state=NORMAL)
    update_cart()

def on_entry_click(event):
    if search_entry.get() == " üîç –ü–æ–∏—Å–∫...":
        search_entry.delete(0, END)
        search_entry.config(fg='#e0e0e0')

def on_focus_out(event):
    if search_entry.get() == "":
        search_entry.insert(0, " üîç –ü–æ–∏—Å–∫...")
        search_entry.config(fg='grey')

def delete(n):
    for var, name, price in selectedProducts:
        if name == n:
            var.set(0)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
            break
    update_cart()

def update_cart():
    for widget in itemsFrame.winfo_children():
        widget.destroy()

    cheq.config(state=NORMAL)
    cheq.delete('1.0', END)
    total = 0

    for var, name, price in selectedProducts:
        if var.get():
            if name not in cart:
                cart[name] = 1
        else:
            if name in cart:
                del cart[name]
            continue

        item_frame = Frame(itemsFrame, bg="#181818")
        item_frame.pack(anchor="w", pady=2)

        Label(item_frame, bg="#181818", fg="#e0e0e0", text=f"{name} - {price} —Ç–≥").pack(side="left", padx=5)
        Button(item_frame, text="-", command=lambda n=name: change_qty(n, -1), relief="flat", width=3, height=1, bg="#2a2a2a", fg="#e0e0e0").pack(side="left", padx=5)
        Label(item_frame, bg="#181818", fg="#e0e0e0", text=str(cart[name]), width=2).pack(side="left", padx=5)
        Button(item_frame, text="+", command=lambda n=name: change_qty(n, 1), relief="flat", width=3, height=1, bg="#2a2a2a", fg="#e0e0e0").pack(side="left", padx=5)
        Button(item_frame, text="–æ—Ç–º–µ–Ω–∞", command=lambda: delete(name), relief="flat", width=5, height=1, bg="#2a2a2a", fg="#e0e0e0").pack(side="left", padx=5)

        total += cart[name] * price
        cheq.config(state=NORMAL)
        cheq.insert(END, f"{name} x{cart[name]} = {cart[name]*price} —Ç–≥\n")
        cheq.config(state=DISABLED)
        
    if total != 0:
        global totality
        totality = 0
        totality += total
        cheq.config(state=NORMAL)
        cheq.insert(END, f"\n–ò—Ç–æ–≥–æ: {total} —Ç–≥")
        cheq.config(state=DISABLED)
    else:
        cheq.config(state=NORMAL)
        cheq.insert(END, "")
        cheq.config(state=DISABLED)

    itemsFrame.bind("<Configure>", on_configure)

def download():
    if payment == 'cash':
        cheq.config(state=NORMAL)
        cheq.insert(END, "\n\n–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –Ω–∞–ª–∏—á–Ω—ã–µ")
        cheq.insert(END, f"\n\n–í–Ω–µ—Å–µ–Ω–Ω–∞—è —Å—É–º–º–∞: {num.get()}")
        cheq.insert(END, f"\n\n–°–¥–∞—á–∞: {num_change}")
    elif payment == 'cart':
        cheq.config(state=NORMAL)
        cheq.insert(END, "\n\n–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –∫–∞—Ä—Ç–∞")
    
    cheque = cheq.get("1.0", END)
    box.showinfo("–û–ø–ª–∞—Ç–∞", message="–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
    with open("cheque.txt", "w", encoding="utf-8") as f:
        f.write("–ß–µ–∫ –æ—Ç: " + datetime.now().strftime("%d.%m.%Y %H:%M:%S") + "\n\n")
        f.write(cheque)
        
    print("–ß–µ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
    
    clear_cart()
    MainWindow()

def clear_cart():
    cheq.config(state=NORMAL)
    cart.clear()
    for var, _, _ in selectedProducts:
        var.set(0)
    update_cart()

# –ü–æ–∏—Å–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
def on_search(*args):
    query = search_var.get().lower()
    listbox.delete(0, END)
    if not query.strip():
        listbox.place_forget()
        return
    matches = [p['name'] for p in allProducts if query in p['name'].lower()]
    if matches:
        for name in matches:
            listbox.insert(END, name)
        listbox.place(x=50, y=85)
        listbox.lift()
    else:
        listbox.place_forget()

def on_select(event):
    global listbox
    selection = listbox.get(ACTIVE)
    if selection not in checkbox_map:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Ä–∞–Ω–µ–µ
        product = next((p for p in allProducts if p['name'] == selection), None)
        if product:
            var = IntVar(value=1)  # —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º
            selectedProducts.append((var, product['name'], product['price']))
            checkbox_map[product['name']] = var
    else:
        checkbox_map[selection].set(1)
    update_cart()
    listbox.place_forget()
    search_var.set("")


def update_change(*args):
    if num.get() == "":
        n = ""
    else:
        n =  int(num.get())
    
    if n == "":
        change.config(text="–°–¥–∞—á–∞: 0")
    else:
        global num_change
        num_change = n - totality
        change.config(text=f"–°–¥–∞—á–∞: {num_change}")
        
def MainWindow():
    mainFrame.place(relwidth=1, relheight=1)
    PaymentWinFrame.pack_forget()
    buyWinFrame.pack_forget()

def BuyWindow():
    mainFrame.place_forget()
    PaymentWinFrame.pack_forget()
    buyWinFrame.pack()
    
def PaymentWindow():
    global payment
    payment = 'cash'
    mainFrame.place_forget()
    PaymentWinFrame.pack()
    buyWinFrame.pack_forget()

# ---------- UI ----------
win = Tk()
win.title("Simulator Cash Register")
win.geometry("700x500")
win.config(bg="#1E1E1E")

style = ttk.Style()
style.theme_use("clam")  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã —Å—Ç–∏–ª—å –ø—Ä–∏–º–µ–Ω–∏–ª—Å—è

style.configure("Vertical.TScrollbar",
                gripcount=0,
                background="#3A3A3A",     # –¶–≤–µ—Ç –ø–æ–ª–∑—É–Ω–∫–∞
                darkcolor="#3A3A3A",
                lightcolor="#3A3A3A",
                troughcolor="#181818",    # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –¥–æ—Ä–æ–∂–∫–∏
                bordercolor="#181818",
                arrowcolor="#E0E0E0")     # –¶–≤–µ—Ç —Å—Ç—Ä–µ–ª–æ–∫

style.configure("TButton",
                font=("Segoe UI", 9),  # –ú–µ–ª–∫–∏–π —à—Ä–∏—Ñ—Ç
                padding=6,             # –£–º–µ–Ω—å—à–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã
                relief="flat",         # –ü–ª–æ—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞ (–±–µ–∑ —Ä–∞–º–∫–∏)
                background="#2a2a2a",  # –¢–µ–º–Ω—ã–π —Ñ–æ–Ω
                foreground="#e0e0e0",  # –°–≤–µ—Ç–ª—ã–π —Ç–µ–∫—Å—Ç
                borderwidth=0)        # –£–±–∏—Ä–∞–µ–º —Ä–∞–º–∫—É

mainFrame = Frame(win, bg="#1E1E1E")

listbox = Listbox(mainFrame, height=5, width=20, border=0, bg="#181818", fg="#e0e0e0", highlightthickness=1, highlightbackground="#2a2a2a", highlightcolor="#2a2a2a")
listbox.bind("<<ListboxSelect>>", on_select)

# –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
search_var = StringVar()
search_var.trace_add("write", on_search)

search_entry = Entry(mainFrame, textvariable=search_var, width=65, bg="#181818", fg="grey", border=0,  highlightthickness=1, highlightbackground="#2a2a2a", highlightcolor="#2a2a2a", insertbackground="#e0e0e0")
search_entry.insert(0, " üîç –ü–æ–∏—Å–∫...")
search_entry.bind('<FocusIn>', on_entry_click)
search_entry.bind('<FocusOut>', on_focus_out)
search_entry.place(x=50, y=50, height=35)

# --- –°–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º—ã–π —Ñ—Ä–µ–π–º –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã ---
canvas = Canvas(mainFrame, width=300, height=250, bg="#181818", highlightthickness=1, highlightbackground="#2a2a2a", highlightcolor="#2a2a2a")
scrollbar = ttk.Scrollbar(mainFrame, orient="vertical", style="Vertical.TScrollbar", command=canvas.yview)
scrollable_frame = Frame(canvas, bg="#181818")

scrollable_frame.bind(
    "<Configure>",
    lambda e: canvas.configure(scrollregion=canvas.bbox("all"))
)

canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
canvas.configure(yscrollcommand=scrollbar.set)

listText = Label(mainFrame, text="–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:", bg="#1E1E1E", fg="#E0E0E0")
listText.place(x=60, y=110)
canvas.place(x=50, y=140)

itemsFrame = scrollable_frame  # –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –¥–ª—è update_cart()

# –ß–µ–∫ –∏ –∫–Ω–æ–ø–∫–∏
cheqText = Label(mainFrame, text="–ß–µ–∫:", bg="#1E1E1E", fg="#E0E0E0")
cheqText.place(x=410, y=120)

cheq = Text(mainFrame, height=12, width=25, bg="#181818", fg="#e0e0e0", border=0, highlightthickness=1, highlightbackground="#2a2a2a", highlightcolor="#2a2a2a", insertbackground="#e0e0e0")
cheq.config(state=DISABLED)
cheq.place(x=400, y=150)

def buy():
    if not cart:
        box.showerror("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")
        return
    cheque_text.config(state=NORMAL)
    cheque_text.delete(1.0, END)
    cheque_text.insert(END, cheq.get("1.0", END))
    cheque_text.config(state=DISABLED)  # Make it read-only

    BuyWindow()
    
    # downloadBtn = Button(win, text="–û–ø–ª–∞—Ç–∏—Ç—å", width=20, bg="#333b4f", fg="#E0E0E0", activebackground="#4a5672", activeforeground="#ffffff", command=download)
    # downloadBtn.place(relx=1.0, rely=1.0, x=-20, y=-20, anchor="se")

buyBtn = Button(mainFrame, text="–û–ø–ª–∞—Ç–∏—Ç—å", width=20, bg="#333b4f", fg="#E0E0E0", activebackground="#4a5672", activeforeground="#ffffff", command=buy)
buyBtn.place(relx=1.0, rely=1.0, x=-20, y=-20, anchor="se")

clearBtn = Button(mainFrame, text="–û—á–∏—Å—Ç–∏—Ç—å", width=20, bg="#333b4f", fg  ="#E0E0E0", activebackground="#4a5672", activeforeground="#ffffff", command=clear_cart)
clearBtn.place(relx=1.0, rely=1.0, x=-220, y=-20, anchor="se")

# ---------- Buy window ----------

buyWinFrame = Frame(win, bg="#1E1E1E")

Label(buyWinFrame, text="–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", bg="#1E1E1E", fg="#E0E0E0", font=("Segoe UI", 12)).pack(pady=20)

cheque_text = Text(buyWinFrame, height=10, width=40, bg="#181818", fg="#e0e0e0", border=0, highlightthickness=1, highlightbackground="#2a2a2a", insertbackground="#e0e0e0")
cheque_text.pack(pady=10)


Button(buyWinFrame, text="–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π", width=20, command=download, bg="#333b4f", fg="#E0E0E0", activebackground="#4a5672").pack(pady=5)

Button(buyWinFrame, text="–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏", width=20, command=PaymentWindow, bg="#333b4f", fg="#E0E0E0", activebackground="#4a5672").pack(pady=5)

Button(buyWinFrame, text="–ó–∞–∫—Ä—ã—Ç—å", width=20, command=MainWindow, bg="#333b4f", fg="#E0E0E0", activebackground="#4a5672").pack()


# ---------- Cash payment ----------

PaymentWinFrame = Frame(win, bg="#1E1E1E")

Label(PaymentWinFrame, text="–í–≤–µ–¥–∏—Ç–µ –∫—É–ø—é—Ä—É/–∫–æ–ø–µ–π–∫—É –¥–∞–Ω–Ω—É—é –≤–∞–º:", bg="#1E1E1E", fg="#E0E0E0").pack(pady=50)
        
num = StringVar()
num.trace_add("write", update_change)

cashEntry = Entry(PaymentWinFrame, textvariable=num, bg="#181818", fg="#fff", border=0,  highlightthickness=1, highlightbackground="#2a2a2a", highlightcolor="#2a2a2a", insertbackground="#fff")
cashEntry.pack(pady=10)

change = Label(PaymentWinFrame, text="–°–¥–∞—á–∞: 0", bg="#1E1E1E", fg="#E0E0E0")
change.pack(pady=10)

Button(PaymentWinFrame, text="–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å", width=20, command=download, bg="#333b4f", fg="#E0E0E0", activebackground="#4a5672", activeforeground="#ffffff").pack(pady=10)

Button(PaymentWinFrame, text="–í–µ—Ä–Ω—É—Ç—å—Å—è", width=20, command=BuyWindow, bg="#333b4f", fg="#E0E0E0", activebackground="#4a5672", activeforeground="#ffffff").pack(pady=10)


MainWindow()
win.mainloop()
